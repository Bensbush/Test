variables:
- group: endpoints

trigger: none
pr: none

pool:
  vmImage: windows-latest

steps:
- checkout: self
  persistCredentials: true
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: CreatePullRequest@1
  condition: False
  inputs:
    repoType: 'GitHub'
    githubEndpoint: 'Bensbush (1)'
    githubRepository: '$(Build.Repository.Name)'
    sourceBranch: 'dev'
    targetBranch: '$(Build.SourceBranch)'
    title: 'Test Volomp'
    githubAutoMerge: true
    githubMergeStrategy: 'rebase'
    githubMergeCommitTitle: 'tester'
    githubMergeCommitMessage: 'Volomp'
- powershell: |
    # construct base URLs
    $apisUrl = "https://api.github.com"
    $projectUrl = "$apisUrl/repos"

    $headers = @{}
    $headers.Add("Authorization", "Bearer $(GITHUB_TOKEN)")
    $headers.Add("Content-Type", "application/json")

    # Create a Pull Request
    $pullRequestUrl = "$projectUrl/Bensbush/Test/pulls"
    $pullRequest = @{
            "head" = "dev"
            "base" = "master"
            "title" = "Pull from dev to master"
        }

    $pullRequestJson = ($pullRequest | ConvertTo-Json -Depth 5)


    Write-Output "$(GITHUB_TOKEN)"
    Write-Output "Sending a REST call to create a new pull request from develop to master"
    Write-Output "Invoke-RestMethod -Method POST -Headers $headers -Body $pullRequestJson -Uri $pullRequestUrl"
    # REST call to create a Pull Request
    $pullRequestResult = Invoke-RestMethod -Method POST -Headers $headers -Body $pullRequestJson -Uri $pullRequestUrl;
    $pullRequestId = $pullRequestResult.pullRequestId

    Write-Output "$pullRequestResult"
  env:
      SYSTEM_ACCESSTOKEN: $(System.AccessToken)
- script: |
    git fetch
    git push origin origin/master:dev -f
  displayName: 'Run a multi-line script'
